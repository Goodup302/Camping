package fr.gadoy.camping.entities;
// Generated 27 juin 2019 16:28:57 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Typelocation generated by hbm2java
 */
@Entity
@Table(name="typelocation"
    ,catalog="camping"
)
public class Typelocation  implements java.io.Serializable {


     private Integer id;
     private String name;
     private double feelPerGuest;
     private Set<Location> locations = new HashSet<Location>(0);

    public Typelocation() {
    }

	
    public Typelocation(String name, double feelPerGuest) {
        this.name = name;
        this.feelPerGuest = feelPerGuest;
    }
    public Typelocation(String name, double feelPerGuest, Set<Location> locations) {
       this.name = name;
       this.feelPerGuest = feelPerGuest;
       this.locations = locations;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    
    @Column(name="name", nullable=false)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="feelPerGuest", nullable=false, precision=22, scale=0)
    public double getFeelPerGuest() {
        return this.feelPerGuest;
    }
    
    public void setFeelPerGuest(double feelPerGuest) {
        this.feelPerGuest = feelPerGuest;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="typelocation")
    public Set<Location> getLocations() {
        return this.locations;
    }
    
    public void setLocations(Set<Location> locations) {
        this.locations = locations;
    }




}


